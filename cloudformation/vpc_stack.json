{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template: Create VPC and subnets",

  "Parameters" : {

    "VPCname" : {
      "Description" : "VPC Name",
      "Type" : "String",
	  "Default" : "ExampleVPC",
      "ConstraintDescription" : "must be a valid VPC name."
    },

    "VPCipv4" : {
      "Description" : "VPC IPv4 CIDR",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "192.0.2.0/24",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "SUBNET1ipv4" : {
      "Description" : "VPC subnet1 IPv4 CIDR",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "192.0.2.0/25",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "SUBNET1zone" : {
      "Description" : "VPC subnet1 AvailabilityZone",
      "Type" : "String",
      "Default" : "eu-west-1a"
    },
	
    "SUBNET2ipv4" : {
      "Description" : "VPC subnet1 IPv4 CIDR",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "192.0.2.128/25",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },
	
    "SUBNET2zone" : {
      "Description" : "VPC subnet2 AvailabilityZone",
      "Type" : "String",
      "Default" : "eu-west-1b"
    },
	
    "AdminIP" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Mappings" : {
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCipv4" },
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : { "Ref" : "VPCname" } },
		  { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "Subnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone": { "Ref" : "SUBNET1zone" },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "SUBNET1ipv4" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "Subnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
		"AvailabilityZone": { "Ref" : "SUBNET2zone" },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "SUBNET2ipv4" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },
	
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
	
    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
	
    "SubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet1" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
	
    "SubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet2" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },


	
	"PublicELB" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow http and https public access",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "80",
				"CidrIp" : "0.0.0.0/0"
			 },{
				"IpProtocol" : "tcp",
				"FromPort" : "443",
				"ToPort" : "443",
				"CidrIp" : "0.0.0.0/0"
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
	   }
	},

	"WWWCache" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow http access from ELB",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "80",
				"SourceSecurityGroupId" : {"Ref" : "PublicELB"}
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
	   }
	},
	
	"InternalELB" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow http access from WWWCache",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "80",
				"SourceSecurityGroupId" : {"Ref" : "WWWCache"}
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
	   }
	},

	"WWWApp" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow http access from Internal ELB",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "80",
				"SourceSecurityGroupId" : {"Ref" : "InternalELB"}
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
	   }
	},
	
	"Admin" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow admin access",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "22",
				"ToPort" : "22",
				"CidrIp" : "0.0.0.0/0"
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AdminIP" } }
        ]
	   }
	},
	
	"DB" : {
	   "Type" : "AWS::EC2::SecurityGroup",
	   "Properties" : {
		  "GroupDescription" : "Allow mysql access from WWWApp",
		  "VpcId" : {"Ref" : "VPC"},
		  "SecurityGroupIngress" : [{
				"IpProtocol" : "tcp",
				"FromPort" : "3306",
				"ToPort" : "3306",
				"SourceSecurityGroupId" : {"Ref" : "WWWApp"}
			 }],
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
	   }
	}
	

  },

  "Outputs" : {
    "VPCId" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
    },
    "Subnet1" : {
      "Description" : "SubnetId of the public subnet",
      "Value" :  { "Ref" : "Subnet1" }
    },
    "Subnet2" : {
      "Description" : "SubnetId of the public subnet",
      "Value" :  { "Ref" : "Subnet2" }
    },
    "PublicELB" : {
      "Description" : "PublicELB security group id",
      "Value" :  { "Ref" : "PublicELB" }
    },
    "WWWCache" : {
      "Description" : "WWWCache security group id",
      "Value" :  { "Ref" : "WWWCache" }
    },
    "InternalELB" : {
      "Description" : "InternalELB security group id",
      "Value" :  { "Ref" : "InternalELB" }
    },
    "WWWApp" : {
      "Description" : "WWWApp security group id",
      "Value" :  { "Ref" : "WWWApp" }
    },
    "Admin" : {
      "Description" : "Admin security group id",
      "Value" :  { "Ref" : "Admin" }
    },
    "DB" : {
      "Description" : "DB security group id",
      "Value" :  { "Ref" : "DB" }
    }
  }
}